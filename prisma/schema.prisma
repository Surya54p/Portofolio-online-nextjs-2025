generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
}

model Like {
  id        String   @id @default(cuid())
  nama      String
  createdAt DateTime @default(now())
}

model Viewers {
  id        Int      @id @default(autoincrement())
  device    String
  createdAt DateTime @default(now())
}

model Portofolios {
  id        String   @id @default(cuid())
  src       String?
  title     String
  stack     String[]
  summary   String
  createdAt DateTime @default(now())

  // Relasi ke kategori
  category   PortofolioCategory? @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model Certificates {
  id        String   @id @unique @default(cuid())
  src       String?
  title     String
  summary   String
  category  String
  createdAt DateTime @default(now())
}

model PortofolioCategory {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  order       Int?
  portofolios Portofolios[] // relasi ke item portofolio
  createdAt   DateTime      @default(now())
}

model Product {
  id          String      @id @default(cuid())
  name        String      @unique
  description String?
  price       Int?
  image       String?
  createdAt   DateTime    @default(now())
  orderItems  OrderItem[]
}

model Order {
  id            String      @id @default(cuid())
  status        String      @default("pending")
  amount        Int
  paymentType   String?
  transactionId String?
  items         OrderItem[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int     @default(1)
  price     Int // snapshot harga saat order (biar nggak berubah kalau harga produk diupdate)
}
