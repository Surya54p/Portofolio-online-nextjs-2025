generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
}

model Like {
  id        String   @id @default(cuid())
  nama      String
  createdAt DateTime @default(now())
}

model Viewers {
  id        Int      @id @default(autoincrement())
  device    String
  createdAt DateTime @default(now())
}

model Portofolios {
  id        String   @id @default(cuid())
  img       String?
  title     String
  stack     String[]
  summary   String
  createdAt DateTime @default(now())

  // Relasi ke kategori
  category   PortofolioCategory? @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model Certificates {
  id        String   @id @unique @default(cuid())
  img       String?
  title     String
  summary   String
  category  String
  createdAt DateTime @default(now())
}

model PortofolioCategory {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  order       Int?
  portofolios Portofolios[] // relasi ke item portofolio
  createdAt   DateTime      @default(now())
}

model Product {
  id          String      @id @default(cuid())
  name        String      @unique
  description String?
  price       Int?
  image       String?
  createdAt   DateTime    @default(now())
  orderItems  OrderItem[]
}

model Order {
  id            String      @id @default(cuid())
  username      String      @default("unknown")
  email         String      @default("unknown@example.com")
  phone_number  String      @default("0000000000")
  status        String      @default("pending")
  amount        Int // total harga semua item
  paymentType   String? // metode pembayaran
  transactionId String? // ID transaksi dari Midtrans
  items         OrderItem[] // daftar produk yang dibeli
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int     @default(1)
  price     Int // snapshot harga saat order dibuat
}

model Skill {
  id          String   @id @default(cuid())
  name        String // nama skill
  img         String? // opsional, bisa taruh URL/icon
  category    Category // enum â†’ aman, gak bisa input sembarangan
  description String? // opsional
}

enum Category {
  SoftSkill
  HardSkill
}

model SomeTools {
  id          String   @id @default(cuid())
  name        String
  techStack   String[]
  img         String
  description String
  link        String
}

enum TicketStatus {
  pending
  proceed
  declined
  complete
}

enum TicketType {
  bug
  product
}

model TicketLaporanMasalah {
  id        Int          @id @default(autoincrement())
  username  String
  email     String
  noTelp    String
  title      String
  status    TicketStatus @default(pending)
  type      TicketType // bug atau product
  message   String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}
